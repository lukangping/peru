apply plugin: 'war'

ext {
    env = null
    props = new Properties()
}


allprojects {
    apply plugin: 'idea'
    repositories {
        mavenCentral()
        maven {
            url "https://mvnrepository.com/artifact/com.facebook.business.sdk/facebook-java-business-sdk"
        }
    }

    configurations.all {
        // Check for updates every build
        resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
    }
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}


subprojects {

    apply plugin: 'java'

    dependencies {
        compile 'org.apache.logging.log4j:log4j-slf4j-impl:2.8.2'
        compile 'org.apache.logging.log4j:log4j-core:2.8.2'
        compile 'org.apache.logging.log4j:log4j-api:2.8.2'
        compile 'org.apache.logging.log4j:log4j-web:2.8.2'
        compile 'org.springframework:spring-webmvc:4.3.13.RELEASE'
        compile 'org.springframework:spring-jdbc:4.3.13.RELEASE'
        compile 'org.springframework:spring-context-support:4.3.13.RELEASE'
        compile 'org.springframework:spring-aspects:4.3.13.RELEASE'
        compile 'org.springframework:spring-aop:4.3.13.RELEASE'
        compile 'com.google.guava:guava:19.0'
        compile 'com.alibaba:fastjson:1.2.6'
        compile 'org.projectlombok:lombok:1.16.18'
        compile 'com.facebook.business.sdk:facebook-java-business-sdk:3.0.0'
        testCompile 'org.powermock:powermock-module-junit4:1.6.2'
        testCompile 'org.powermock:powermock-api-mockito:1.6.2'
        testCompile 'org.mockito:mockito-all:1.9.5'
        testCompile 'org.springframework:spring-test:4.3.13.RELEASE'
    }

    processResources {
        from(sourceSets.main.resources.srcDirs) {
            filter(org.apache.tools.ant.filters.ReplaceTokens,
                    tokens: rootProject['props']
            )
        }
    }

}


task populateProdEnv << {
    env = 'prod'
}

task populateDev2Env << {
    env = 'test'
}
task populateDevEnv << {
    env = 'dev'
}
task populateProps << {

    printf env

    new File("${rootProject.projectDir}/configs/config-${env}.properties")
            .withInputStream {
        stream -> props.load(stream)
    }

}

task localTomcatRun(dependsOn: [subprojects.clean, populateDevEnv, populateProps, ':peru-webapp:tomcatRun'])
task prodTomcatRun(dependsOn: [subprojects.clean, populateProdEnv, populateProps, ':peru-webapp:tomcatRun'])
task localTomcatDebug(dependsOn: [subprojects.clean, populateDevEnv, populateProps, ':peru-webapp:tomcatRunDebug'])

task packageDevWar(dependsOn: [populateDevEnv, populateProps, ':peru-webapp:war'])
task packageTestWar(dependsOn: [populateDev2Env, populateProps, ':peru-webapp:war'])
task packageProdWar(dependsOn: [populateProdEnv, populateProps, ':peru-webapp:war'])

